% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fuel_grid_generator.R
\name{fuel_grid_generator}
\alias{fuel_grid_generator}
\title{Fuel Grid Generator}
\usage{
fuel_grid_generator(
  aoi_poly,
  aoi_buffer = 15000,
  lut,
  reference_grid,
  fuel_layers,
  fuel_col,
  desired_resolution = 100,
  pc = F,
  pc_col,
  output_directory
)
}
\arguments{
\item{aoi_poly}{Spatial data layer or character string to the location of the spatial data containing the area of interest to create a fuel grid for Burn-P3}

\item{aoi_buffer}{This is a buffer in meters to extend the aoi_poly for use in clipping the gridded information.}

\item{lut}{A look-up table containing the fuel information in order to convert the polygonal and raster information into the final fuel grid layer. \emph{\emph{Mandatory columns are:}} export_value, descriptive_name, fuel_type}

\item{reference_grid}{Reference raster to provide a projection and a surface to assign values onto, this should be a grid that registers with the other grids you are using for your project.Can be either the location of the raster or a raster object.}

\item{fuel_layers}{Character vector defining spatial (shapefile) and gridded (raster) for ingestion during use of the function. These layers will be stacked from top to bottom, spatial layers first, then raster layers.}

\item{fuel_col}{Character vector defining the column that contains character fuel types in each shapefile in the same order they are called in the \code{fuel_layers} object}

\item{desired_resolution}{The desired resolution of the final spatraster. \emph{(Default = 100)}}

\item{pc}{A boolean vector of logical values (T/F) defining whether or not percent conifer is to be calculated for mixedwood fuels based on a percent conifer column.}

\item{pc_col}{A character vector defining the column for percent conifer in each spatial layer. If the corresponding \code{pc} value is false enter "".}

\item{output_directory}{The directory to place the final fuel grid. If using the generated directories use \code{bp3_base} as the output directory.}
}
\value{
SpatRaster
}
\description{
Fuel Grid Generator
}
\examples{

## Load in requisite data
fuel_shape_1 <- sf::st_read( dsn = system.file("extdata/extdata.gpkg", package = "BurnP3.HelpR"),
                         layer = "Shape_Fuels_1")
fuel_shape_2 <- sf::st_read( dsn = system.file("extdata/extdata.gpkg", package = "BurnP3.HelpR"),
                         layer = "Shape_Fuels_2")
fuel_shape_PC <- sf::st_read( dsn = system.file("extdata/extdata.gpkg", package = "BurnP3.HelpR"),
                         layer = "Shape_Fuels_PC")
fuel_raster <- terra::rast(system.file("extdata/fuel.tif", package = "BurnP3.HelpR"))
reference_grid <- fuel_raster

aoi_poly <- sf::st_read(  dsn = system.file("extdata/extdata.gpkg", package = "BurnP3.HelpR"),
                         layer = "aoi_poly")
data("lut")
output_directory <- paste0(tempdir(),"\\\\")
fuel_grid_generator(aoi_poly = aoi_poly,
                   aoi_buffer = 0,
                   lut = lut,
                   reference_grid = reference_grid,
                   fuel_layers = list(fuel_shape_1,
                                   fuel_shape_2,
                                   fuel_raster,
                                   fuel_shape_PC),
                   fuel_col = c("Fuel_type",
                                "Fuels",
                                NA,
                                "FBP"),
                   pc = c(FALSE,FALSE,FALSE,TRUE),
                   pc_col = c(NA,NA,NA,"PC"),
                   output_directory = output_directory
                   )
 print(paste0("Fuel Grid has been output to ",output_directory))
}
